# Get all graph nodes and links
Match (n)-[r]->(m)
Return n,r,m

# Filter for influence area(s)
Match (n)-[r]->(m)
where 'sport' in r.influence_areas or 'entertainment' in r.influence_areas
Return n,r,m

Match (n)-[r]->(m)
where 'sport' in r.influence_areas and 'entertainment' in r.influence_areas
Return n,r,m

# Filter for influence scores
... needs some changes on how you write


# All paths between to nodes by name
MATCH (n {name: 'User G'})
MATCH (m {name: 'User F'})
MATCH p=(n)-[:Influences*..]->(m)
WITH *, relationships(p) AS relations
RETURN [relation IN relations | [startNode(relation), (relation), endNode(relation)]] as data

# Shortest path between to nodes by name
MATCH (n {name: 'User G'})
MATCH (m {name: 'User B'})
MATCH p=shortestPath((n) - [:Influences* ..] -> (m))
WITH *, relationships(p) AS relations 
RETURN [relation IN relations | [startNode(relation), (relation), endNode(relation)]] as data