# Get all graph nodes and links
Match (n)-[r]->(m)
Return n,r,m

# Filter for influence area(s)
Match (n)-[r]->(m)
where 'sport' in r.influence_areas or 'entertainment' in r.influence_areas
Return n,r,m

Match (n)-[r]->(m)
where 'sport' in r.influence_areas and 'entertainment' in r.influence_areas
Return n,r,m

# Filter for influence scores
... needs some changes on how you write

# Filter for finding shortest path
MATCH (n {name: 'User G'} ),
      (m {name: 'User F'}),
      p = shortestPath((n)-[r:Influences*]->(m))
RETURN r, p

Or

MATCH p=(start:Redditor)-[r:Influences*1..10]->(end:Redditor)
WHERE start.name = 'User G' AND end.name = 'User F'
RETURN start, p, end
ORDER BY length(p) ASC
LIMIT 1

